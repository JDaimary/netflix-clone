{"version":3,"sources":["https/requests.js","https/axios.js","components/Banner.js","components/Nav.js","components/Row.js","screens/HomeScreen.js","firebase.js","screens/SignIn.js","screens/Login.js","features/userSlice.js","screens/Plans.js","screens/Profile.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","addEventListener","removeEventListener","onClick","push","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","SignIn","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","message","createUserWithEmailAndPassword","Login","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Plans","products","setProducts","collection","where","querySnapshot","forEach","productDoc","docs","price","priceId","priceData","Object","entries","productData","description","Profile","useSelector","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","exact","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.171cf2b8.chunk.js","sourcesContent":["const API_KEY = \"96d4f6996c493f7fa00bd00ed2ccacb9\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\n/* base url to make request to the movie database */\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/Banner.css\";\r\nimport requests from \"../https/requests\";\r\nimport axios from \"../https/axios\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner-contents\">\r\n        <h1 className=\"banner-title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner-buttons\">\r\n          <button className=\"banner-btn\">Play</button>\r\n          <button className=\"banner-btn\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner-description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n\r\n      <div className=\"banner-fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"../css/Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNavBar);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav-black\"}`}>\r\n      <div className=\"nav-contents\">\r\n        <img\r\n        onClick={() => {history.push(\"/\")}}\r\n          className=\"nav-logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n          alt=\"Netflix Logo\"\r\n        />\r\n\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav-avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"Profile\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../https/axios\";\r\nimport \"../css/Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]); // if any variable is pulled in from outside and used in useEffect, we have to add it here\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row-posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            ((isLargeRow && movie.poster_path) ||\r\n            (!isLargeRow && movie.backdrop_path)) && (\r\n              <img\r\n                onClick={() => handleClick(movie)}\r\n                key={movie.id}\r\n                className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\r\n                src={`${baseUrl}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Banner from \"../components/Banner\";\r\nimport Nav from \"../components/Nav\";\r\nimport Row from \"../components/Row\";\r\nimport requests from \"../https/requests\";\r\nimport \"../css/HomeScreen.css\";\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow={true}\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB231cF6Ru1m1R4c2UGTAcy6nq_fpPgIsg\",\r\n  authDomain: \"netflix-clone-d4fc0.firebaseapp.com\",\r\n  projectId: \"netflix-clone-d4fc0\",\r\n  storageBucket: \"netflix-clone-d4fc0.appspot.com\",\r\n  messagingSenderId: \"350514030294\",\r\n  appId: \"1:350514030294:web:4185c78898eb896c838b77\",\r\n  measurementId: \"G-PH881YNJ70\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };\r\nexport default db;\r\n","import React, { useRef } from \"react\";\r\nimport \"../css/SignIn.css\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction SignIn() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => console.log(authUser))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"signIn\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\r\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\r\n        <button type=\"submit\" onClick={signUp}>\r\n          Sign In\r\n        </button>\r\n        <h4>\r\n          <span className=\"signIn-gray\">New to Netflix? </span>\r\n          <span className=\"signIn-link\" onClick={register}>\r\n            Sign Up now\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/Login.css\";\r\nimport SignIn from \"./SignIn\";\r\n\r\nfunction Login() {\r\n  const [signIn, setSignIn] = useState(false);\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login-background\">\r\n        <img\r\n          className=\"login-logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n          alt=\"Netflix Logo\"\r\n        />\r\n        <button onClick={() => setSignIn(true)} className=\"login-btn\">\r\n          Sign In\r\n        </button>\r\n        <div className=\"login-gradient\" />\r\n      </div>\r\n\r\n      <div className=\"login-body\">\r\n        {signIn ? (\r\n          <SignIn />\r\n        ) : (\r\n          <>\r\n            <h1>Unlimited films, TV programmes and more.</h1>\r\n            <h2>Watch anywhere. Cancel at any time.</h2>\r\n            <h3>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership\r\n            </h3>\r\n            <div className=\"login-input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email Address\" />\r\n                <button\r\n                  onClick={() => setSignIn(true)}\r\n                  className=\"login-getStarted\"\r\n                >\r\n                  GET STARTED\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/Plans.css\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Plans() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {};\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data();\r\n          const priceSnap = await productDoc.ref.collection(\"price\").get();\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].price = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            };\r\n          });\r\n        });\r\n        setProducts(products);\r\n      });\r\n  }, []);\r\n\r\n  console.log(products);\r\n\r\n  return (\r\n    <div className=\"plans\">\r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        return (\r\n          <div className=\"plans-plan\">\r\n            <div className=\"plans-info\">\r\n              <h5>{productData.name}</h5>\r\n              <h6>{productData.description}</h6>\r\n            </div>\r\n            <button>Subscribe</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Plans;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Nav from \"../components/Nav\";\r\nimport \"../css/Profile.css\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Plans from \"./Plans\";\r\n\r\nfunction Profile() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <Nav />\r\n      <div className=\"profile-body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profile-info\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profile-details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profile-plans\">\r\n                <h3>Plans</h3>\r\n                <Plans />\r\n              <button\r\n                className=\"profile-signOut\"\r\n                onClick={() => auth.signOut()}\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./screens/Login\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport Profile from \"./screens/Profile\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //Logged in\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //Logged out\n        dispatch(logout());\n      }\n    });\n\n    return unsubscribe;\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <Switch>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}